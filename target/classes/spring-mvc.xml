<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.stock.controller" /> 
 
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    <!-- 定义跳转的文件的前后缀 ，视图模式配置（视图解析器）-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/pages/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
    
   <!--扫描包 -->
   <context:component-scan base-package="com.stock.service" annotation-config="true"/>  
   <!-- ASPECTJ注解 -->
   <aop:aspectj-autoproxy proxy-target-class="true" />  
     
    
<!-- 得到springMVC所提供的注解驱动，识别全部的@RequestMapping -->
<mvc:annotation-driven /> 
 <!-- 处理对静态资源的请求 -->
 <!--location用于指定静态资源的位置，mapping用来过滤请求 -->
<mvc:resources location="/assets/image/" mapping="/assets/image/**"/> 
<mvc:resources location="/assets/css/" mapping="/assets/css/**"/> 
<mvc:resources location="/assets/js/" mapping="/assets/js/**"/>
<mvc:resources location="/assets/html/" mapping="/assets/html/**"/> 

<mvc:resources location="/static/media/css/" mapping="/static/media/css/**"/> 
<mvc:resources location="/static/media/image/" mapping="/static/media/image/**"/> 
<mvc:resources location="/static/media/js/" mapping="/static/media/js/**"/>

<mvc:resources location="/static/media/assets/css/" mapping="/static/media/assets/css/**"/> 
<mvc:resources location="/static/media/assets/image/" mapping="/static/media/assets/image/**"/> 
<mvc:resources location="/static/media/assets/js/" mapping="/static/media/assets/js/**"/>
<mvc:resources location="/static/media/assets/avatars/" mapping="/static/media/assets/avatars/**"/>
<mvc:resources location="/static/media/assets/font/" mapping="/static/media/assets/font/**"/>


<mvc:resources location="/consolemanage/image/" mapping="/consolemanage/image/**"/> 
<mvc:resources location="/consolemanage/css/" mapping="/consolemanage/css/**"/> 
<mvc:resources location="/consolemanage/js/" mapping="/consolemanage/js/**"/>
<mvc:resources location="/consolemanage/content/" mapping="/consolemanage/content/**"/> 


<mvc:interceptors>  
    <mvc:interceptor>  
        <mvc:mapping path="/logout"/>
        <bean class="com.stock.interceptor.Interceptor"/>  
    </mvc:interceptor>  
    <mvc:interceptor>  
        <mvc:mapping path="/logout"/>
        <bean class="com.stock.interceptor.Interceptor2"/>  
    </mvc:interceptor>  
</mvc:interceptors> 




	
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" /> 
    </bean>
    
	
</beans>